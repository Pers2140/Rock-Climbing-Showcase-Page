{"ast":null,"code":"var _jsxFileName = \"/home/node/Rock-Climbing-Showcase-Page/reactfrend/src/Components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport Mapbox from './Mapbox';\nimport Infobar from './InfoBar';\nimport data from '../data.json';\nimport './Styles/sidebar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UserForm() {\n  _s();\n\n  // const [eventData, setEventData] = useState([])\n  // const [loading, setLoading] = useState(false)\n  // useEffect(() => {\n  //     const fetchEvents = async () =>{\n  //         setLoading(true)\n  //         const res = await fetch(' http://127.0.0.1:8080/data.json')\n  //         const {locName} = await res.json()\n  //         setEventData(locName)\n  //         setLoading(false)\n  //     }\n  //     fetchEvents()\n  //     console.log(eventData)\n  // },[])\n  // let avg_center = {\n  //     lat: 38.54555438314078,\n  //     lng: -97.9853579502318\n  // }\n  const search_results = {};\n  const [search, setSearch] = useState('');\n  const [filtered_data, setfiltered_data] = useState({});\n  const [geoLoc, setGeoLoc] = useState([-90.9, 40]); // When search value changes check for matches\n\n  useEffect(() => {\n    // return filtered out data Object to plug into map and infobox\n    Object.keys(data).map(key => {\n      // if state equals to search add to filtered data\n      if (search.toLowerCase() == data[key]['state'].toLowerCase()) {\n        search_results[key] = data[key];\n        setfiltered_data(search_results); // set geo location\n\n        if (Object.keys(search_results).length) {\n          console.log('search_results exist centering');\n          const geoLat = Math.round(search_results[Object.keys(search_results)[0]].googleInfo.geoLoc[0]);\n          const geoLng = Math.round(search_results[Object.keys(search_results)[0]].googleInfo.geoLoc[1]);\n          setGeoLoc([geoLng, geoLat]);\n        } else {\n          console.log('search_results does not exist');\n        }\n      } else {\n        console.log('nothing to add');\n      }\n    });\n  }, [search]); // useEffect looks at search for changes and updates as needed\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: \"#3f4f78\"\n      },\n      class: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-9 col-sm-12 \",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"search\",\n            type: \"text\",\n            onChange: e => setSearch(e.target.value),\n            placeholder: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Mapbox, {\n            eventData: filtered_data,\n            geoLoc: geoLoc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"list-box col-md-3 col-sm-12\",\n          children: Object.keys(filtered_data).map(key => {\n            return /*#__PURE__*/_jsxDEV(Infobar, {\n              gym_data: filtered_data[key]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(UserForm, \"lOSNfh1JoMhIcRgQ5cWOjNt8QMk=\");\n\n_c = UserForm;\nexport default UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"sources":["/home/node/Rock-Climbing-Showcase-Page/reactfrend/src/Components/Form.js"],"names":["React","useState","useEffect","useRef","Mapbox","Infobar","data","UserForm","search_results","search","setSearch","filtered_data","setfiltered_data","geoLoc","setGeoLoc","Object","keys","map","key","toLowerCase","length","console","log","geoLat","Math","round","googleInfo","geoLng","background","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState, useEffect, useRef } from 'react'\nimport Mapbox from './Mapbox'\nimport Infobar from './InfoBar'\nimport data from '../data.json'\nimport './Styles/sidebar.css'\n\nfunction UserForm() {\n    // const [eventData, setEventData] = useState([])\n    // const [loading, setLoading] = useState(false)\n\n    // useEffect(() => {\n    //     const fetchEvents = async () =>{\n    //         setLoading(true)\n    //         const res = await fetch(' http://127.0.0.1:8080/data.json')\n    //         const {locName} = await res.json()\n\n    //         setEventData(locName)\n    //         setLoading(false)\n    //     }\n\n    //     fetchEvents()\n    //     console.log(eventData)\n    // },[])\n\n   \n    // let avg_center = {\n    //     lat: 38.54555438314078,\n    //     lng: -97.9853579502318\n    // }\n    const search_results = {}\n    const [search, setSearch] = useState('')\n    const [filtered_data, setfiltered_data] = useState({})\n    const [geoLoc, setGeoLoc] = useState([-90.9, 40])\n\n    // When search value changes check for matches\n    useEffect(() => {\n        // return filtered out data Object to plug into map and infobox\n        Object.keys(data).map(key => {\n            // if state equals to search add to filtered data\n            if (search.toLowerCase() == data[key]['state'].toLowerCase()) {\n                search_results[key] = data[key]\n                setfiltered_data(search_results)\n\n                // set geo location\n                if (Object.keys(search_results).length) {\n                    console.log('search_results exist centering')\n                    const geoLat = Math.round(search_results[Object.keys(search_results)[0]].googleInfo.geoLoc[0])\n                    const geoLng = Math.round(search_results[Object.keys(search_results)[0]].googleInfo.geoLoc[1])\n\n                    setGeoLoc([geoLng, geoLat])\n                } else {\n                    console.log('search_results does not exist')\n                }\n            }\n            else {\n                console.log('nothing to add')\n            }\n        })\n    }, [search]) // useEffect looks at search for changes and updates as needed\n\n    return (\n        <>\n            <div style={{background:\"#3f4f78\"}}class=\"container-fluid\" >\n                <div class=\"row\" >\n                    <div class=\"col-md-9 col-sm-12 \" >\n                    <input className=\"search\" type=\"text\" onChange={(e) => setSearch(e.target.value)} placeholder=\"Search\"></input>\n                        {/* <GMap eventData={filtered_data} geoLoc={geoLoc}/> */}\n                        <Mapbox eventData={filtered_data} geoLoc={geoLoc} />\n                    </div><br></br>\n                    <div class=\"list-box col-md-3 col-sm-12\" >\n                        {\n                            Object.keys(filtered_data).map(key => {\n                                return (<Infobar gym_data={filtered_data[key]} />)\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        </>\n\n    )\n}\n\nexport default UserForm;"]},"metadata":{},"sourceType":"module"}