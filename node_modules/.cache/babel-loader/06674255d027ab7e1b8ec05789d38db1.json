{"ast":null,"code":"var _jsxFileName = \"/home/node/Rock-Climbing-Showcase-Page/reactfrend/src/Components/GMap.js\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport GymMarker from './gymMarker'; // define constants\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GMap = ({\n  eventData\n}) => {\n  let center = {\n    lat: 38.54555438314078,\n    lng: -97.9853579502318\n  };\n  const zoom = 8;\n  const mapBoxStyle = {\n    width: \"100%\",\n    height: \"100vh\"\n  }; // find avg lat and lng to center search\n\n  const avg_loc = data => {\n    let avg_GeoLoc = {};\n    Object.keys(data).map(key => {\n      // console.log(data[key]['googleInfo']['geoLoc'])\n      Object.assign(avg_GeoLoc, data[key]['googleInfo']['geoLoc']);\n    });\n    console.log(avg_GeoLoc);\n    return avg_GeoLoc;\n  }; // center = avg_loc(eventData)\n  // create array and to add name, rating and geoLoc\n\n\n  const locMarkers = [];\n\n  const Markers = () => {\n    for (const i in Object.keys(eventData)) {\n      // console.log(eventData[Object.keys(eventData)[i]])\n      const gInfo = eventData[Object.keys(eventData)[i]]['googleInfo'];\n      const lat = gInfo['geoLoc'][0];\n      const lng = gInfo['geoLoc'][1];\n      const name = gInfo['correct_name'];\n      const rating = gInfo['rating'];\n\n      if (typeof lat === \"number\") {\n        locMarkers.push({\n          name: name,\n          rating: rating,\n          geoLoc: [lat, lng]\n        });\n      }\n    }\n  };\n\n  Markers();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: mapBoxStyle,\n    className: \"map\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: 'AIzaSyDtggfQvcGa_TB9YlG3vWRMKAe2Q4orUr8'\n      },\n      defaultCenter: center,\n      defaultZoom: zoom,\n      children: locMarkers.map(ev => {\n        // console.log(ev[0],ev[1])\n        return /*#__PURE__*/_jsxDEV(GymMarker, {\n          ginfo: ev,\n          lat: ev['geoLoc'][0],\n          lng: ev['geoLoc'][1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_c = GMap;\nGMap.defaultProps = {\n  center: {\n    lat: 38.54555438314078,\n    lng: -97.9853579502318\n  },\n  zoom: 5\n};\nexport default GMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"GMap\");","map":{"version":3,"sources":["/home/node/Rock-Climbing-Showcase-Page/reactfrend/src/Components/GMap.js"],"names":["React","useState","useEffect","GoogleMapReact","GymMarker","GMap","eventData","center","lat","lng","zoom","mapBoxStyle","width","height","avg_loc","data","avg_GeoLoc","Object","keys","map","key","assign","console","log","locMarkers","Markers","i","gInfo","name","rating","push","geoLoc","ev","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport GymMarker from './gymMarker'\n\n// define constants\n\nconst GMap = ({eventData}) => {\n    \n    let center = {lat: 38.54555438314078,\n        lng: -97.9853579502318}\n    const zoom = 8\n    const mapBoxStyle = {\n        width: \"100%\",\n        height: \"100vh\",\n    }\n    \n    // find avg lat and lng to center search\n    const avg_loc = (data) => {\n        let avg_GeoLoc = {}\n        Object.keys(data).map( key =>{\n            // console.log(data[key]['googleInfo']['geoLoc'])\n            Object.assign(avg_GeoLoc,data[key]['googleInfo']['geoLoc'])\n        })\n        console.log(avg_GeoLoc)\n        return avg_GeoLoc\n    }\n    // center = avg_loc(eventData)\n    \n    // create array and to add name, rating and geoLoc\n    const locMarkers = []\n    const Markers = () => {\n        for (const i in Object.keys(eventData)) {\n            // console.log(eventData[Object.keys(eventData)[i]])\n            const gInfo = eventData[Object.keys(eventData)[i]]['googleInfo']\n\n            const lat = gInfo['geoLoc'][0]\n            const lng = gInfo['geoLoc'][1]\n            const name = gInfo['correct_name']\n            const rating = gInfo['rating']\n\n            if (typeof (lat) === \"number\") {\n                locMarkers.push(\n                    {\n                        name: name,\n                        rating: rating,\n                        geoLoc: [lat, lng]\n                    }\n                )\n            }\n        }\n    }\n    Markers()\n\n\n\n    return (\n        <div style={mapBoxStyle} className=\"map\">\n            <GoogleMapReact\n                bootstrapURLKeys={{ key: 'AIzaSyDtggfQvcGa_TB9YlG3vWRMKAe2Q4orUr8' }}\n                defaultCenter={center}\n                defaultZoom={zoom}\n            >\n\n                {locMarkers.map(ev => {\n                    // console.log(ev[0],ev[1])\n                    return <GymMarker ginfo={ev} lat={ev['geoLoc'][0]} lng={ev['geoLoc'][1]} />\n                })}\n\n            </GoogleMapReact>\n            {/* {locationInfo && <LocationInfoBox info={locationInfo} />} */}\n        </div>\n    )\n}\n\nGMap.defaultProps = {\n    center: {\n        lat: 38.54555438314078,\n        lng: -97.9853579502318\n    },\n    zoom: 5\n}\n\nexport default GMap"]},"metadata":{},"sourceType":"module"}