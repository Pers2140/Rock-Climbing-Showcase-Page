{"ast":null,"code":"var _jsxFileName = \"/home/node/Rock-Climbing-Showcase-Page/reactfrend/src/Components/Mapbox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport './Styles/mapbox.css';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1IjoiZGJvaS1jdXJyeSIsImEiOiJja29kbm54MDYwMXhpMm9qeGw2aHN6aWpkIn0.wlCNtWwP70rQtX6J8vsX0w';\n\nconst Map = ({\n  eventData,\n  geoLoc\n}) => {\n  _s();\n\n  const mapContainerRef = useRef(null);\n  const [lng, setLng] = useState(-97.65);\n  const [lat, setLat] = useState(40.84);\n  const [zoom, setZoom] = useState(3);\n  const [center, setCenter] = useState(setLat, setLng);\n\n  const setMarkers = map => {\n    Object.keys(eventData).map(key => {\n      try {\n        // Getting gym geo location and rounding value\n        // console.log(eventData[key].googleInfo.geoLoc)\n        const getLat = Math.round(eventData[key].googleInfo.geoLoc[0]);\n        const getLng = Math.round(eventData[key].googleInfo.geoLoc[1]); // Geting name to display\n\n        const name = eventData[key].googleInfo.correct_name.substr(0, 16) + \"...\"; // console.log(eventData[key].gym_info[0])\n\n        const gym_site = eventData[key].gym_info[0];\n\n        if (getLng <= 90 && getLng <= 90) {\n          // create a DOM element for the marker\n          var el = document.createElement('div');\n          el.className = 'marker';\n          el.innerHTML = `<a target=\"_blank\"  href=\"http://${gym_site}\"><h5 class=\"markerText\">${name}<img style=\"visibility:visible;width:50px;height:50px\"src=\"https://www.flaticon.com/premium-icon/icons/svg/4357/4357659.svg\"><h5><a>`; // create map marker \n\n          new mapboxgl.Marker(el, {\n            color: \"black\"\n          }).setLngLat({\n            lat: getLat,\n            lng: getLng\n          }).addTo(map);\n        } else {\n          console.log(\"something went wrong creating marker div\");\n        }\n      } catch {}\n    });\n  }; // Initialize map when component mounts\n\n\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/mapbox/outdoors-v11',\n      center: geoLoc,\n      zoom: zoom\n    }); // Set up Markers and zoom\n\n    setZoom(6);\n    setMarkers(map); // Add navigation control (the +/- zoom buttons)\n\n    map.addControl(new mapboxgl.NavigationControl(), 'top-right');\n    map.on('move', () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    }); // Clean up on unmount\n\n    return () => map.remove();\n  }, [eventData]); // when user searches eventData updates and useEffect refreshes page\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebarStyle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        \"position\": \"relative\",\n        \"text-align\": \"right\",\n        \"color\": \"white\",\n        \"padding\": \"5px\"\n      },\n      children: [\"Longitude: \", lng, \" | Latitude: \", lat, \" | Zoom: \", zoom]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      ref: mapContainerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Map, \"VRBI5RvwG6zJ3eVA7eeKSeXKpw8=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/node/Rock-Climbing-Showcase-Page/reactfrend/src/Components/Mapbox.js"],"names":["React","useRef","useEffect","useState","mapboxgl","accessToken","Map","eventData","geoLoc","mapContainerRef","lng","setLng","lat","setLat","zoom","setZoom","center","setCenter","setMarkers","map","Object","keys","key","getLat","Math","round","googleInfo","getLng","name","correct_name","substr","gym_site","gym_info","el","document","createElement","className","innerHTML","Marker","color","setLngLat","addTo","console","log","container","current","style","addControl","NavigationControl","on","getCenter","toFixed","getZoom","remove"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport './Styles/mapbox.css'\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\n\nmapboxgl.accessToken =\n  'pk.eyJ1IjoiZGJvaS1jdXJyeSIsImEiOiJja29kbm54MDYwMXhpMm9qeGw2aHN6aWpkIn0.wlCNtWwP70rQtX6J8vsX0w';\n\nconst Map = ({ eventData,geoLoc }) => {\n  const mapContainerRef = useRef(null);\n  const [lng, setLng] = useState(-97.65);\n  const [lat, setLat] = useState(40.84);\n  const [zoom, setZoom] = useState(3);\n  const [center, setCenter] = useState(setLat,setLng);\n  \n  const setMarkers = (map) => {\n    Object.keys(eventData).map(key => {\n      try {\n        // Getting gym geo location and rounding value\n        // console.log(eventData[key].googleInfo.geoLoc)\n        const getLat = Math.round(eventData[key].googleInfo.geoLoc[0])\n        const getLng = Math.round(eventData[key].googleInfo.geoLoc[1])\n        // Geting name to display\n        const name = eventData[key].googleInfo.correct_name.substr(0,16)+\"...\"\n\n        // console.log(eventData[key].gym_info[0])\n        const gym_site = eventData[key].gym_info[0]\n        if (getLng <= 90 && getLng <= 90) {\n\n          // create a DOM element for the marker\n          var el = document.createElement('div');\n          el.className = 'marker';\n          el.innerHTML = `<a target=\"_blank\"  href=\"http://${gym_site}\"><h5 class=\"markerText\">${name}<img style=\"visibility:visible;width:50px;height:50px\"src=\"https://www.flaticon.com/premium-icon/icons/svg/4357/4357659.svg\"><h5><a>`\n          \n          // create map marker \n          new mapboxgl.Marker(el,\n            { color: \"black\",\n            }).setLngLat({ lat: getLat, lng: getLng }).addTo(map)\n        } else {\n          console.log(\"something went wrong creating marker div\")\n        }\n      } catch { }\n    })}\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    \n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/mapbox/outdoors-v11',\n      center: geoLoc,\n      zoom: zoom,\n    });\n    \n    // Set up Markers and zoom\n    setZoom(6)\n    setMarkers(map)\n\n    // Add navigation control (the +/- zoom buttons)\n    map.addControl(new mapboxgl.NavigationControl(), 'top-right');\n\n    map.on('move', () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    });\n\n    // Clean up on unmount\n    return () => map.remove();\n  }, [eventData]); // when user searches eventData updates and useEffect refreshes page\n\n  return (\n    <div>\n      <div className=\"sidebarStyle\">\n      </div>\n      <div style={{ \"position\":\"relative\",\"text-align\":\"right\",\"color\":\"white\",\"padding\":\"5px\"}}>\n        Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n      </div>\n      <div  className=\"map-container\" ref={mapContainerRef} />\n    </div>\n  );\n};\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}