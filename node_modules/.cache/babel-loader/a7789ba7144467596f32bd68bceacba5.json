{"ast":null,"code":"var _jsxFileName = \"/home/node/Rock-Climbing-Showcase-Page/reactfrend/src/Components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport Result from './Result';\nimport GMap from './GMap';\nimport Infobar from './InfoBar';\nimport data from '../data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UserForm() {\n  _s();\n\n  // const [eventData, setEventData] = useState([])\n  // const [loading, setLoading] = useState(false)\n  // useEffect(() => {\n  //     const fetchEvents = async () =>{\n  //         setLoading(true)\n  //         const res = await fetch(' http://127.0.0.1:8080/data.json')\n  //         const {locName} = await res.json()\n  //         setEventData(locName)\n  //         setLoading(false)\n  //     }\n  //     fetchEvents()\n  //     console.log(eventData)\n  // },[])\n  const panel_style = {\n    // position:\"fixed\",\n    position: \"relative\",\n    float: \"left\",\n    \"z-index\": \"3000\",\n    height: \"100vh\",\n    overflow: \"scroll\",\n    background: \"rgba(29, 53, 87, 0.9)\",\n    \"border-radius\": 0,\n    color: \"white\",\n    padding: \"25px\"\n  };\n  let avg_center = {\n    lat: 38.54555438314078,\n    lng: -97.9853579502318\n  };\n  const search_results = {};\n  const [search, setSearch] = useState('');\n  const [filtered_data, setfiltered_data] = useState({}); // When search value changes check for matches\n\n  useEffect(() => {\n    // return filtered out data Object to plug into map and infobox\n    Object.keys(data).map(key => {\n      // if state equals to search add to filtered data\n      if (search == data[key]['state']) {\n        search_results[key] = data[key];\n      } else {\n        console.log('nothing to add');\n      }\n    });\n    setfiltered_data(search_results);\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-sm-12 col-md-3 \",\n          style: panel_style,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            onChange: e => setSearch(e.target.value),\n            placeholder: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), Object.keys(filtered_data).map(key => {\n            return /*#__PURE__*/_jsxDEV(Infobar, {\n              gym_data: filtered_data[key]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"\",\n          children: /*#__PURE__*/_jsxDEV(GMap, {\n            eventData: filtered_data,\n            center: avg_center\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(UserForm, \"W4pNhMdOlDjTGumZXV9YONduS20=\");\n\n_c = UserForm;\nexport default UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"sources":["/home/node/Rock-Climbing-Showcase-Page/reactfrend/src/Components/Form.js"],"names":["React","useState","useEffect","useRef","Result","GMap","Infobar","data","UserForm","panel_style","position","float","height","overflow","background","color","padding","avg_center","lat","lng","search_results","search","setSearch","filtered_data","setfiltered_data","Object","keys","map","key","console","log","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA,QAAMC,WAAW,GAAG;AAChB;AACAC,IAAAA,QAAQ,EAAE,UAFM;AAGhBC,IAAAA,KAAK,EAAE,MAHS;AAIhB,eAAW,MAJK;AAKhBC,IAAAA,MAAM,EAAE,OALQ;AAMhBC,IAAAA,QAAQ,EAAE,QANM;AAOhBC,IAAAA,UAAU,EAAE,uBAPI;AAQhB,qBAAiB,CARD;AAShBC,IAAAA,KAAK,EAAE,OATS;AAUhBC,IAAAA,OAAO,EAAE;AAVO,GAApB;AAYA,MAAIC,UAAU,GAAG;AACbC,IAAAA,GAAG,EAAE,iBADQ;AAEbC,IAAAA,GAAG,EAAE,CAAC;AAFO,GAAjB;AAIA,QAAMC,cAAc,GAAG,EAAvB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACsB,aAAD,EAAgBC,gBAAhB,IAAoCvB,QAAQ,CAAC,EAAD,CAAlD,CApCgB,CAuChB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAuB,IAAAA,MAAM,CAACC,IAAP,CAAYnB,IAAZ,EAAkBoB,GAAlB,CAAsBC,GAAG,IAAI;AACzB;AACA,UAAIP,MAAM,IAAId,IAAI,CAACqB,GAAD,CAAJ,CAAU,OAAV,CAAd,EAAkC;AAC9BR,QAAAA,cAAc,CAACQ,GAAD,CAAd,GAAsBrB,IAAI,CAACqB,GAAD,CAA1B;AACH,OAFD,MAGK;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AACJ,KARD;AASAN,IAAAA,gBAAgB,CAACJ,cAAD,CAAhB;AACH,GAZQ,EAYN,CAACC,MAAD,CAZM,CAAT;AAcA,sBACI;AAAA,2BACI;AAAK,MAAA,KAAK,EAAC,iBAAX;AAAA,6BACI;AAAK,QAAA,KAAK,EAAC,KAAX;AAAA,gCAEI;AAAK,UAAA,KAAK,EAAC,qBAAX;AAAiC,UAAA,KAAK,EAAEZ,WAAxC;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,cAAjB;AAAgC,YAAA,IAAI,EAAC,MAArC;AAA4C,YAAA,QAAQ,EAAGsB,CAAD,IAAOT,SAAS,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtE;AAAyF,YAAA,WAAW,EAAC;AAArG;AAAA;AAAA;AAAA;AAAA,kBADJ,EAIQR,MAAM,CAACC,IAAP,CAAYH,aAAZ,EAA2BI,GAA3B,CAA+BC,GAAG,IAAI;AAClC,gCACI,QAAC,OAAD;AAAS,cAAA,QAAQ,EAAEL,aAAa,CAACK,GAAD;AAAhC;AAAA;AAAA;AAAA;AAAA,oBADJ;AAGH,WAJD,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAcI;AAAK,UAAA,KAAK,EAAC,EAAX;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,EAAEL,aAAjB;AAAgC,YAAA,MAAM,EAAEN;AAAxC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAwBH;;GA9EQT,Q;;KAAAA,Q;AAgFT,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport { useState, useEffect, useRef } from 'react'\nimport Result from './Result'\nimport GMap from './GMap';\nimport Infobar from './InfoBar'\nimport data from '../data.json'\n\nfunction UserForm() {\n    // const [eventData, setEventData] = useState([])\n    // const [loading, setLoading] = useState(false)\n\n    // useEffect(() => {\n    //     const fetchEvents = async () =>{\n    //         setLoading(true)\n    //         const res = await fetch(' http://127.0.0.1:8080/data.json')\n    //         const {locName} = await res.json()\n\n    //         setEventData(locName)\n    //         setLoading(false)\n    //     }\n\n    //     fetchEvents()\n    //     console.log(eventData)\n    // },[])\n\n    const panel_style = {\n        // position:\"fixed\",\n        position: \"relative\",\n        float: \"left\",\n        \"z-index\": \"3000\",\n        height: \"100vh\",\n        overflow: \"scroll\",\n        background: \"rgba(29, 53, 87, 0.9)\",\n        \"border-radius\": 0,\n        color: \"white\",\n        padding: \"25px\"\n    }\n    let avg_center = {\n        lat: 38.54555438314078,\n        lng: -97.9853579502318\n    }\n    const search_results = {}\n    const [search, setSearch] = useState('')\n    const [filtered_data, setfiltered_data] = useState({})\n    \n      \n    // When search value changes check for matches\n    useEffect(() => {\n        // return filtered out data Object to plug into map and infobox\n        Object.keys(data).map(key => {\n            // if state equals to search add to filtered data\n            if (search == data[key]['state']) {\n                search_results[key] = data[key]\n            }\n            else {\n                console.log('nothing to add')\n            }\n        })\n        setfiltered_data(search_results)\n    }, [search])\n\n    return (\n        <>\n            <div class=\"container-fluid\" >\n                <div class=\"row\" >\n\n                    <div class=\"col-sm-12 col-md-3 \" style={panel_style}>\n                        <input className=\"form-control\" type=\"text\" onChange={(e) => setSearch(e.target.value)}  placeholder=\"Search\"></input>\n                        {\n                        \n                            Object.keys(filtered_data).map(key => {\n                                return (\n                                    <Infobar gym_data={filtered_data[key]} />\n                                )\n                            })\n                        \n                        }\n                    </div>\n                    <div class=\"\" >\n                        <GMap eventData={filtered_data} center={avg_center}/>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default UserForm;"]},"metadata":{},"sourceType":"module"}